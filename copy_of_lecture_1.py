# -*- coding: utf-8 -*-
"""Copy of Lecture_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yL9DzUmR4YGlzhxCSzuatQUrdFGkO-e4

![rmotr](https://user-images.githubusercontent.com/7065401/52071918-bda15380-2562-11e9-828c-7f95297e4a82.png)
<hr style="margin-bottom: 40px;">

<img src="https://user-images.githubusercontent.com/7065401/58563302-42466a80-8201-11e9-9948-b3e9f88a5662.jpg"
    style="width:400px; float: right; margin: 0 40px 40px 40px;"></img>

# Bike store sales

In this class we'll be analyzing sales made on bike stores.

[Follow this data in a Google Spreadsheet](https://docs.google.com/spreadsheets/d/1NOe_UrPx6ULF2C5MvHmZ9ODuw8t9M77Q1Y64gP-7JHA/edit?usp=sharing)

![purple-divider](https://user-images.githubusercontent.com/7065401/52071927-c1cd7100-2562-11e9-908a-dde91ba14e59.png)

## Hands on!
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# %matplotlib inline

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## Loading our data:
"""

!head data/sales_data.csv

sales = pd.read_csv(
    'data/sales_data.csv',
    parse_dates=['Date'])

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## The data at a glance:
"""

sales.head()

sales.shape

sales.info()

sales.describe()

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## Numerical analysis and visualization

We'll analyze the `Unit_Cost` column:
"""

sales['Unit_Cost'].describe()

sales['Unit_Cost'].mean()

sales['Unit_Cost'].median()

sales['Unit_Cost'].plot(kind='box', vert=False, figsize=(14,6))

sales['Unit_Cost'].plot(kind='density', figsize=(14,6)) # kde

ax = sales['Unit_Cost'].plot(kind='density', figsize=(14,6)) # kde
ax.axvline(sales['Unit_Cost'].mean(), color='red')
ax.axvline(sales['Unit_Cost'].median(), color='green')

ax = sales['Unit_Cost'].plot(kind='hist', figsize=(14,6))
ax.set_ylabel('Number of Sales')
ax.set_xlabel('dollars')

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## Categorical analysis and visualization

We'll analyze the `Age_Group` column:
"""

sales.head()

sales['Age_Group'].value_counts()

sales['Age_Group'].value_counts().plot(kind='pie', figsize=(6,6))

ax = sales['Age_Group'].value_counts().plot(kind='bar', figsize=(14,6))
ax.set_ylabel('Number of Sales')

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## Relationship between the columns?

Can we find any significant relationship?
"""

corr = sales.corr()

corr

fig = plt.figure(figsize=(8,8))
plt.matshow(corr, cmap='RdBu', fignum=fig.number)
plt.xticks(range(len(corr.columns)), corr.columns, rotation='vertical');
plt.yticks(range(len(corr.columns)), corr.columns);

sales.plot(kind='scatter', x='Customer_Age', y='Revenue', figsize=(6,6))

sales.plot(kind='scatter', x='Revenue', y='Profit', figsize=(6,6))

ax = sales[['Profit', 'Age_Group']].boxplot(by='Age_Group', figsize=(10,6))
ax.set_ylabel('Profit')

boxplot_cols = ['Year', 'Customer_Age', 'Order_Quantity', 'Unit_Cost', 'Unit_Price', 'Profit']

sales[boxplot_cols].plot(kind='box', subplots=True, layout=(2,3), figsize=(14,8))

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## Column wrangling

We can also create new columns or modify existing ones.

### Add and calculate a new `Revenue_per_Age` column
"""

sales['Revenue_per_Age'] = sales['Revenue'] / sales['Customer_Age']

sales['Revenue_per_Age'].head()

sales['Revenue_per_Age'].plot(kind='density', figsize=(14,6))

sales['Revenue_per_Age'].plot(kind='hist', figsize=(14,6))

"""### Add and calculate a new `Calculated_Cost` column

Use this formula

$$ Calculated\_Cost = Order\_Quantity * Unit\_Cost $$
"""

sales['Calculated_Cost'] = sales['Order_Quantity'] * sales['Unit_Cost']

sales['Calculated_Cost'].head()

(sales['Calculated_Cost'] != sales['Cost']).sum()

"""We can see the relationship between `Cost` and `Profit` using a scatter plot:"""

sales.plot(kind='scatter', x='Calculated_Cost', y='Profit', figsize=(6,6))

"""### Add and calculate a new `Calculated_Revenue` column

Use this formula

$$ Calculated\_Revenue = Cost + Profit $$
"""

sales['Calculated_Revenue'] = sales['Cost'] + sales['Profit']

sales['Calculated_Revenue'].head()

(sales['Calculated_Revenue'] != sales['Revenue']).sum()

sales.head()

sales['Revenue'].plot(kind='hist', bins=100, figsize=(14,6))

"""### Modify all `Unit_Price` values adding 3% tax to them"""

sales['Unit_Price'].head()

#sales['Unit_Price'] = sales['Unit_Price'] * 1.03

sales['Unit_Price'] *= 1.03

sales['Unit_Price'].head()

"""![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)

## Selection & Indexing:

### Get all the sales made in the state of `Kentucky`
"""

sales.loc[sales['State'] == 'Kentucky']

"""### Get the mean revenue of the `Adults (35-64)` sales group"""

sales.loc[sales['Age_Group'] == 'Adults (35-64)', 'Revenue'].mean()

"""### How many records belong to Age Group `Youth (<25)` or `Adults (35-64)`?"""

sales.loc[(sales['Age_Group'] == 'Youth (<25)') | (sales['Age_Group'] == 'Adults (35-64)')].shape[0]

"""### Get the mean revenue of the sales group `Adults (35-64)` in `United States`"""

sales.loc[(sales['Age_Group'] == 'Adults (35-64)') & (sales['Country'] == 'United States'), 'Revenue'].mean()

"""### Increase the revenue by 10% to every sale made in France"""

sales.loc[sales['Country'] == 'France', 'Revenue'].head()

#sales.loc[sales['Country'] == 'France', 'Revenue'] = sales.loc[sales['Country'] == 'France', 'Revenue'] * 1.1

sales.loc[sales['Country'] == 'France', 'Revenue'] *= 1.1

sales.loc[sales['Country'] == 'France', 'Revenue'].head()

"""![purple-divider](https://user-images.githubusercontent.com/7065401/52071927-c1cd7100-2562-11e9-908a-dde91ba14e59.png)"""